import * as schemas from '@app/routes/<%= dasherize(parentRoute) %>/_schemas';
import { RouteAuthConfig } from '@lib/orm/models';
import { RouteHandlerMethodForConfig } from '@src/augmentations/fastify';
import {
    <%= classify(name) %>Payload,
    <%= classify(name) %>Response,
    roleName,
} from '@start-bootstrap/website-shared-types';
import { FastifyPluginAsync } from 'fastify';

export const <%= camelize(name) %>: FastifyPluginAsync = async function (instance, options): Promise<void> {
    instance.route({
        method: 'POST',
        url: '/<%= dasherize(name) %>',
        schema: schemas.<%= camelize(name) %>,
        handler,
        config: <RouteAuthConfig>{ minRole: roleName.admin },
    });
};

export const handler: RouteHandlerMethodForConfig<{
    Body: <%= classify(name) %>Payload;
}> = async function (request, reply): Promise<<%= classify(name) %>Response> {
    const <%= camelize(name) %>Payload: <%= classify(name) %>Payload = request.body;

    return {} as <%= classify(name) %>Response;
};
