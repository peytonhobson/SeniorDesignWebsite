import { findOrganization } from '@app/routes/_shared';
import httpCodes from '@inip/http-codes';
import { <%= classify(name) %> } from '@lib/orm/entity';
import { RouteAuthConfig } from '@lib/orm/models';
import { RouteHandlerMethodForConfig } from '@src/augmentations/fastify';
import {
    Create<%= classify(name) %>ErrorCodes,
    Create<%= classify(name) %>Payload,
    OrgIDParam,
    Results<%= classify(name) %>,
    roleName,
} from '@start-bootstrap/website-shared-types';
import { FastifyPlugin } from 'fastify';
import { getConnection } from 'typeorm';

import * as schemas from './_schemas';

export const <%= camelize(plural) %>Create: FastifyPlugin = async function (instance, options): Promise<void> {
    instance.route({
        method: 'POST',
        url: '/',
        schema: schemas.<%= camelize(plural) %>Create,
        handler,
        config: <RouteAuthConfig>{ minRole: roleName.admin },
    });
};

export const handler: RouteHandlerMethodForConfig<{
    Params: OrgIDParam;
    Body: Create<%= classify(name) %>Payload;
}> = async function (request, reply): Promise<Results<%= classify(name) %>> {
    const organization = await findOrganization(request, request.params.orgID, {
        relations: ['<%= camelize(plural) %>'],
    });

    const create<%= classify(name) %>Payload: Create<%= classify(name) %>Payload = request.body;
    const entityManager = getConnection().manager;

    // TODO

    let created<%= classify(name) %>: <%= classify(name) %>;

    try {
        created<%= classify(name) %> = await entityManager.save(
            entityManager.create(<%= classify(name) %>, {
                ...create<%= classify(name) %>Payload,
                organization,
            })
        );
    } catch (error) {
        throw request.generateError<Create<%= classify(name) %>ErrorCodes>(
            httpCodes.INTERNAL_SERVER_ERROR,
            'ERROR_CREATING_<%= constantCase(name) %>',
            error
        );
    }

    reply.code(httpCodes.CREATED);
    return created<%= classify(name) %>.toResults<%= classify(name) %>();
};
