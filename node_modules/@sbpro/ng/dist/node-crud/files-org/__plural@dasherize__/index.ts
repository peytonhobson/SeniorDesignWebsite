import { health } from '@app/plugins';
import { FastifyPlugin } from 'fastify';

import { <%= camelize(plural) %>All } from './<%= dasherize(plural) %>-all';
import { <%= camelize(plural) %>Create } from './<%= dasherize(plural) %>-create';
import { <%= camelize(plural) %>Delete } from './<%= dasherize(plural) %>-delete';
import { <%= camelize(plural) %>DeleteMultiple } from './<%= dasherize(plural) %>-delete-multiple';
import { <%= camelize(plural) %>Find } from './<%= dasherize(plural) %>-find';
import { <%= camelize(plural) %>Read } from './<%= dasherize(plural) %>-read';
import { <%= camelize(plural) %>ReadMultiple } from './<%= dasherize(plural) %>-read-multiple';
import { <%= camelize(plural) %>Update } from './<%= dasherize(plural) %>-update';

export const <%= camelize(plural) %>: FastifyPlugin = async function (instance, options): Promise<void> {
    instance.addHook('preHandler', instance.verifyMinRole);

    instance.register(health);
    instance.register(<%= camelize(plural) %>All);
    instance.register(<%= camelize(plural) %>Create);
    instance.register(<%= camelize(plural) %>Delete);
    instance.register(<%= camelize(plural) %>DeleteMultiple);
    instance.register(<%= camelize(plural) %>Find);
    instance.register(<%= camelize(plural) %>Read);
    instance.register(<%= camelize(plural) %>ReadMultiple);
    instance.register(<%= camelize(plural) %>Update);
};
