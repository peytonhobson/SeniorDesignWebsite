import { find<%= classify(plural) %> } from '@app/routes/_shared';
import httpCodes from '@inip/http-codes';
import { RouteHandlerMethodForConfig } from '@src/augmentations/fastify';
import {
    DeleteMultiple<%= classify(plural) %>Payload,
    Delete<%= classify(name) %>ErrorCodes,
} from '@start-bootstrap/website-shared-types';
import { FastifyPlugin } from 'fastify';
import { getConnection } from 'typeorm';

import * as schemas from './_schemas';

export const <%= camelize(plural) %>DeleteMultiple: FastifyPlugin = async function (
    instance,
    options
): Promise<void> {
    instance.route({
        method: 'POST',
        url: '/delete-multiple',
        schema: schemas.<%= camelize(plural) %>DeleteMultiple,
        handler,
    });
};

export const handler: RouteHandlerMethodForConfig<{
    Body: DeleteMultiple<%= classify(plural) %>Payload;
}> = async function (request, reply): Promise<undefined> {
    const deleteMultiple<%= classify(name) %>Payload: DeleteMultiple<%= classify(plural) %>Payload = request.body;
    const entityManager = getConnection().manager;

    const found<%= classify(plural) %> = await find<%= classify(plural) %>(request, deleteMultiple<%= classify(name) %>Payload.<%= camelize(name) %>IDs);

    try {
        await entityManager.remove(found<%= classify(plural) %>);
    } catch (error) {
        throw request.generateError<Delete<%= classify(name) %>ErrorCodes>(
            httpCodes.INTERNAL_SERVER_ERROR,
            'ERROR_DELETING_<%= constantCase(name) %>',
            error
        );
    }

    reply.code(httpCodes.NO_CONTENT);
    return;
};
