import { ElementRef, NgZone, OnDestroy, OnChanges, AfterContentChecked, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class AutosizeDirective implements OnDestroy, OnChanges, AfterContentChecked {
    element: ElementRef;
    private _zone;
    minRows: any;
    private _minRows;
    maxRows: number;
    onlyGrow: boolean;
    useImportant: boolean;
    resized: EventEmitter<number>;
    private retries;
    private textAreaEl;
    private _oldContent;
    private _oldWidth;
    private _windowResizeHandler;
    private _destroyed;
    onInput(textArea: HTMLTextAreaElement): void;
    constructor(element: ElementRef, _zone: NgZone);
    ngOnDestroy(): void;
    ngAfterContentChecked(): void;
    ngOnChanges(changes: any): void;
    _findNestedTextArea(): void;
    _onTextAreaFound(): void;
    _addWindowResizeHandler(): void;
    adjust(inputsChanged?: boolean): void;
    private _getLineHeight;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AutosizeDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AutosizeDirective, "[autosize]", never, { "onlyGrow": "onlyGrow"; "useImportant": "useImportant"; "minRows": "minRows"; "maxRows": "maxRows"; }, { "resized": "resized"; }, never>;
}

//# sourceMappingURL=autosize.directive.d.ts.map