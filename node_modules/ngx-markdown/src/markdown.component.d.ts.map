{"version":3,"file":"markdown.component.d.ts","sources":["markdown.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, OnChanges } from '@angular/core';\r\nimport { KatexOptions } from './katex-options';\r\nimport { MarkdownService } from './markdown.service';\r\nexport declare class MarkdownComponent implements OnChanges, AfterViewInit {\r\n    element: ElementRef<HTMLElement>;\r\n    markdownService: MarkdownService;\r\n    protected static ngAcceptInputType_emoji: boolean | '';\r\n    protected static ngAcceptInputType_katex: boolean | '';\r\n    protected static ngAcceptInputType_lineHighlight: boolean | '';\r\n    protected static ngAcceptInputType_lineNumbers: boolean | '';\r\n    data: string | undefined;\r\n    src: string | undefined;\r\n    get emoji(): boolean;\r\n    set emoji(value: boolean);\r\n    get katex(): boolean;\r\n    set katex(value: boolean);\r\n    katexOptions: KatexOptions | undefined;\r\n    get lineHighlight(): boolean;\r\n    set lineHighlight(value: boolean);\r\n    line: string | string[] | undefined;\r\n    lineOffset: number | undefined;\r\n    get lineNumbers(): boolean;\r\n    set lineNumbers(value: boolean);\r\n    start: number | undefined;\r\n    error: EventEmitter<string>;\r\n    load: EventEmitter<string>;\r\n    ready: EventEmitter<void>;\r\n    private _emoji;\r\n    private _katex;\r\n    private _lineHighlight;\r\n    private _lineNumbers;\r\n    constructor(element: ElementRef<HTMLElement>, markdownService: MarkdownService);\r\n    ngOnChanges(): void;\r\n    ngAfterViewInit(): void;\r\n    render(markdown: string, decodeHtml?: boolean): void;\r\n    private coerceBooleanProperty;\r\n    private handleData;\r\n    private handleSrc;\r\n    private handleTransclusion;\r\n    private handlePlugins;\r\n    private setPluginClass;\r\n    private setPluginOptions;\r\n    private toLispCase;\r\n}\r\n"]}